---
layout: post
title: "2022.5: Beta release notes"
description: "Beta release notes for Home Assistant Core 2022.5"
date: 2022-04-27 00:00:00
date_formatted: "May 04, 2022"
author: Franck Nijhof
author_twitter: frenck
comments: true
categories:
- Release-Notes
- Core
og_image: /images/blog/2022-05/social.png
---

<a href='/integrations/#version/2022.5'><img src='/images/blog/2022-05/social.png' style='border: 0;box-shadow: none;'></a>

These are the beta release notes for Home Assistant Core 2022.5 (and is thus a
work in progress).

If you encounter any issues with the beta release, please report them on GitHub:

- Issues with integrations, automations and such (Core related):<br>
  <https://github.com/home-assistant/core/issues>
- Issues with the frontend/Lovelace:<br>
  <https://github.com/home-assistant/frontend/issues>
- Issues with the Supervisor:<br>
  <https://github.com/home-assistant/supervisor/issues>
- Issues with the documentation:<br>
  <https://github.com/home-assistant/home-assistant.io/issues>

Please be sure to include the beta version you are running in the issue
version field (not title), so we can classify your issue correctly.

Issues introduced in the beta are processed with priority.

---

Still need to write some kind of introduction text for this release...

Anyways, in the mean time:

Enjoy the (beta) release!

../Frenck

<!--more-->

- [Reoganized configuration menu](#reoganized-configuration-menu)
- [Find entities even quicker than before](#find-entities-even-quicker-than-before)
- [Gauge card segment colors](#gauge-card-segment-colors)
- [New automation & script features](#new-automation--script-features)
  - [If-then](#if-then)
  - [Calendar trigger](#calendar-trigger)
  - [For each](#for-each)
  - [Continue on error](#continue-on-error)
  - [Stopping a script or automation](#stopping-a-script-or-automation)
  - [Parallelizing actions](#parallelizing-actions)
  - [And there is even more!](#and-there-is-even-more)
- [Database optimizations](#database-optimizations)
- [Update entity updates](#update-entity-updates)
- [Template selector](#template-selector)
- [Other noteworthy changes](#other-noteworthy-changes)
- [New Integrations](#new-integrations)
- [Integrations now available to set up from the UI](#integrations-now-available-to-set-up-from-the-ui)
- [Need help? Join the community!](#need-help-join-the-community)
- [Breaking Changes](#breaking-changes)
- [Farewell to the following](#farewell-to-the-following)
- [All changes](#all-changes)


<!--<p class='img'>
<img class="no-shadow" src='/images/blog/2022-05/entity-hidden.png' alt='Screenshot showing the new option to hide an entity'>
You can now mark an entity as hidden in the entity settings.
</p>-->

<!--<img class="no-shadow" src='/images/blog/2022-05/groups.png' alt='Screenshot showing adding groups from the UI'>-->

<!--<div class='videoWrapper'>
<iframe width="560" height="315" src="https://www.youtube-nocookie.com/embed/FLH4SXMAQS4" frameborder="0" allowfullscreen></iframe>
</div>-->

## Reoganized configuration menu

{% details "TODO" %}

- Improve story/add more information on "why".
- Needs more body, this is a huge change and improvement.
- Add screenshots when fontend UI is stabilized/finished for this release
- Review important movements to highlight.
- Add a breaking change section to summerize the shifts?

{% enddetails %}

A couple of releases ago, we have started the process of reorganizing the
configuration menu, this release is bringing the next big step in that
reorganizing.

Goal is to have everything in a single logical place, having it accessible
nicely from mobile devices and prepare for future expansion.

<img class="no-shadow" src='/images/blog/2022-05/configuration-menu.png' alt='Screenshot showing the new configuration menu structure'>

Are you running Home Assistant OS or Supervised? The Supervisor has been fully
merged into the configuration menu, to provide a seamless/unified experience.
This removes weirdness like having a network section in the system menu
but also in the Supervisor section.

Blueprints are now moved to the automations & scenes section, and by popular
request: Helpers have moved to the devices & services page. Areas & Zone are
now nicely brought together in a single menu and there is now an extensive
System menu.

## Find entities even quicker than before

Looking to access that one entity quickly? But it isn't on your dashboard?

The [Quick Bar](/docs/tools/quick-bar/) is actually really helpful for that,
just press `e` anywhere you are in Home Assistant. But what if you are on
mobile or a tablet?

This release add a quick search button to the dashboards, so you can look up
and access any entity you need, at any time; Even when its not on your current
dashboard.

<img class="no-shadow" src='/images/blog/2022-05/entity-finder.png' alt='Screenshot showing the new quick search button'>

## Gauge card segment colors

A nice addition by [@Netzwerkfehler] this release, is the ability to freely
define the the number of segments, and their colors, for the gauge card!

<p class='img'>
<img src='/images/dashboards/lovelace_gauge_segments.png' alt='Screenshot of the gauge card with multiple colored segments.'>
Screenshot of the gauge card with multiple colored segments.
</p>

This can be really helpful if you'd like to define upper and lower sensor
limits on your gauge, as shown in the example above. The configuration example
used for the above screenshot, can be found in the [Gauge Card documentation].

[@Netzwerkfehler]: https://github.com/Netzwerkfehler
[Gauge Card documentation]: /dashboards/gauge/#examples

## New automation & script features

{% details "TODO" %}

- Order of all chapters; should they be subsections?
- If-Then:
  - Replace screenshot
  - Check story/contents
  - Shorter example?
- Calendar trigger:
  - Replace screenshot
  - Check story
- For each:
  - Improve story
  - Better example?
- Parallelizing actions: 
  - Simplify?
  - Less warnings to make it less negative?
- Stopping a script or automation:
  - Replace screenshot
  - Story... is meh
- The more stuff section... Its just a lot, figure out a way
  to organize the story.

{% enddetails %}


This release is packed with new automation & script features! Some have been
added to the UI, others are advanced features that are currently only available
for when using YAML.

One thing almost all these changes have in common: They have been requested
and votes for by the community in our [Feature Requests] forum.

[Feature Requests]: https://community.home-assistant.io/c/feature-requests/13

### If-then

When we introduced the [Choose action](/docs/scripts/#choose-a-group-of-actions),
our goal was to provide a structure that allowed for other action sequences
selectively based on conditions.

While this structure is very flexible and extensive, there was still a desire
for an if-then(-else) structure, that is small, simple, compact and clean to
use. This release brings you just that.

The new if-then action is available via the automations and scripts editors.

<img class="no-shadow" src='https://user-images.githubusercontent.com/195327/162737991-d97d3cf0-2039-4ebe-9295-1c3d7fdeff90.png' alt='Screenshot showing If-then'>

An example in YAML:

```yaml
actions:
  - if:
      - alias: "If no one is home"
        condition: state
        entity_id: zone.home
        state: 0
    then:
      - alias: "Then start cleaning already!"
        service: vacuum.start
        target:
          area_id: living_room
    # The `else` is fully optional and can be omitted
    else:
      - service: notify.notify
        data:
          message: "Skipped cleaning, someone is home!"
```

[More information can be found in the scripts documentation](/docs/scripts/#if-then)

### Calendar trigger

This release [@allenporter] gave the [Calendar] integration (and the
[Google Calendars] integration lots of love. In the process a new Calendar
trigger was added, which is available for use in your automations.

<img class="no-shadow" src='/images/integrations/calendar/trigger.png' alt='Screenshot showing the calendar trigger'>

This brand new trigger is a little more flexible compared to the (previously 
only other option) state trigger. It is availble for automation in YAML as well,
and the trigger provides [a lot of trigger variables](/docs/automation/templating/#calendar)
you can use in your templates.

[More information can be found in the Calendar integration documentation](/integrations/calendar/#automation)

[@allenporter]: https://github.com/allenporter
[Calendar]: /integrations/calendar/
[Google Calendars]: /integrations/google

### For each

We had a number of options available, to repeat a [group of actions]. For
example, repeating based on a count, reapting while a condition passes and
repeating until a condition passes.

These have been very powerful, but, repeating a sequence for a items in a list
was also requested and voted for. This release implements: For each.

This is an advanced feature, and is only available for use in YAML right now.
Here is an example of a for each that sends out two notifications in different
languages:

{% raw %}

```yaml
repeat:
  for_each:
    - language: English
      message: Hello World
    - language: Dutch
      hello: Hallo Wereld
  sequence:
    - service: notify.phone
      data:
        title: "Message in {{ repeat.item.language }}"
        message: "{{ repeat.item.message }}!"
```

{% endraw %}

Each item in the list will be run against a sequence of actions and the item
is available as a variable you can use in your templates. The list of
items you can provide to `for_each` can be mappings, lists of just strings
and even complex templates that provide a list as a result.

[More information can be found in the scripts documentation](/docs/scripts/#for-each)

[group of actions]: /docs/scripts/#repeat-a-group-of-actions

### Continue on error

A automation and script runs a sequence of actions. One of the comments and
question we often see/read/get is: "If one of the actions fails, why does
the whole automtion stop?"

Good question! To answer this, we have added a new feature: Continue on error.
This will enable you to allow certain steps in an automation or script sequence
to fail, without interupting the whole sequence.

This is an example of a script that will always run the second action, even
if the first action fails with an error.

```yaml
sequence:
  - alias: "If this one fails..."
    continue_on_error: true
    service: notify.super_unreliable_service_provider
    data:
      message: "I'm going to error out..."

  - alias: "This one will still run!"
    service: persistent_notification.create
    data:
      title: "Hi there!"
      message: "I'm fine..."
```

This is an advanced feature, currently only availble for automations in YAML.

[More information can be found in the scripts documentation](/docs/scripts/#continuing-on-error)

### Stopping a script or automation

You can now stop a script or automation half way using the Stop action.
Combined with the previously mentioned new If-then action, this can be used
to conditionally stop an automation or script.

This can be helpful, for example, in case you want just part of a automation
to run when you are home and run it at full when you are away.

This feature is available both via the UI and YAML.

<img class="no-shadow" src='https://user-images.githubusercontent.com/195327/163601771-1e8a1e6e-c4e3-4b18-a388-fc17b946dea8.png' alt='Screenshot showing the new stop action'>

Additionally, the stop action can be set as an "error" which gives
you a way to stop an automation or script and mark it as an error (for
example, if you detected something unexpected).

[More information can be found in the scripts documentation](/docs/scripts/#stopping-a-script-sequence)

### Parallelizing actions

This release introduces, a highly advanced feature, that provides a way to
parallelize actions (or groups of actions).

By default, all sequences of actions in Home Assistant run sequentially.
This means the next action is started after the current action has been
completed.

This is not always needed, for example, if the sequence of actions
doesn’t rely on each other and order doesn’t matter. For those cases, the
parallel action can be used to run the actions in the sequence in parallel,
meaning all the actions are started at the same time.

```yaml
automation:
  - trigger:
      - platform: state
        entity_id: binary_sensor.motion
        to: "on"
    action:
      - parallel:
          - service: notify.person1
            data:
              message: "These messages are sent at the same time!"
          - service: notify.person2
            data:
              message: "These messages are sent at the same time!"
```

As said, this is quite an powerful and advanced feature, and it comes with
caveats. Be sure to check out the [script documentation on parallizing actions](/docs/scripts/#parallelizing-actions)
before you decide on using it.

### And there is even more!

These items still need to be processed for the release notes, or might just
be summed up.

- **Allow any entity to match state condition** ([@frenck] - [#69763])
  
  If any of the entities matches a certain condition, instead of all of them:

  ```yaml
  condition:
  condition: state
  entity_id:
    - binary_sensor.motion_sensor_left
    - binary_sensor.motion_sensor_right
  match: any
  state: "on"
  ```

  YAML only capability.

  [More information can be found on the state condition documentation](/docs/scripts/conditions#state-condition)

- **Trigger on not matching to/from states** ([@frenck] - [#69760])

  Adds support for `not_from` and `not_to` in the state trigger:

  ```yaml
  automation:
  trigger:
    - platform: state
      entity_id: light.living_room
      not_from:
        - "unavailable"
        - "unknown"
      to: "on"
  ```

  ```yaml
  automation:
  trigger:
    - alias: "Trigger on any alarm state, except when it is disarmed"
      platform: state
      entity_id: alarm_control_panel.home
      not_to: "disarmed"
  ```

  YAML only capability.

  [More information can be found on the state condition documentation](/docs/scripts/conditions#state-condition)

- **Allow disabling specific triggers/actions/conditions** ([@frenck] - [#70082])

  Adds support to disable/enable any trigger, action or condition; without
  removing it from the automation or script.

  ```yaml
  # Example automation with a disabled trigger
  automation:
    trigger:
      # This trigger will not trigger, as it is disabled.
      # This automation does not run when the sun is set.
      - enabled: false
        platform: sun
        event: sunset

      # This trigger will fire, as it is not disabled.
      - platform: time
        at: "15:32:00"
  ```

  Currently only supported by YAML, but supposed to be a UI driven feature
  (as well, in YAML you can just comment out). UI feature hasn't landed yet.

  - Triggers: <https://rc.home-assistant.io/docs/automation/trigger/#disabling-a-trigger>
  - Conditions: <https://rc.home-assistant.io/docs/scripts/conditions#disabling-a-condition>
  - Actions: <https://rc.home-assistant.io/docs/scripts/#disabling-an-action>

- **Add shorthand notation for logical conditions** ([@thomasloven] - [#70120])

  This add a shorter/cleaner syntax for logical conditions (`and`, `or`, `not`)

  ```yaml
  or:
    - <condition>
    - and:
      - <condition>
      - <condition>
    - not:
      - <condition>
  ```

  A full example

  ```yaml
  automation test:
    - trigger:
      - platform: state
        entity_id: light.bed_light
        to: "on"
      condition:
        - or:
          - condition: state
            entity_id: light.ceiling_lights
            state: "on"
          - condition: state
            entity_id: light.kitchen_lights
            state: "on"
      action:
        - service: light.turn_off
          target:
            entity_id: light.bed_light
  ```

  This feature is YAML only and currently causes issues with the UI editor.
  There is a possibility this feature is pulled from the beta until UI support
  is fixed in a future release.

  [More information can be found on the condition documentation](/docs/scripts/conditions#logical-conditions)

- **Allow selecting multiple entities for state trigger** (#12334) @frenck

  This is a UI feature that allows you to create a single trigger with multiple
  entities. In YAML this has been possible for a long time already, but this
  release added support for it in the UI editors.

  <img class="no-shadow" src='https://user-images.githubusercontent.com/195327/163603895-126f08d0-705e-4f30-9c6f-a02392d8ff86.png' alt='Screenshot showing multiple entites in a single trigger from the UI.'>

## Database optimizations

{% details "TODO" %}

- Add automatic monthly repacking to section?
  - Auto repack the database on the second sunday of the month ([@bdraco] - [#69314]) ([recorder docs]) (breaking-change) (noteworthy)

{% enddetails %}

The last release focused on reducing the size of the database and optimizing
the writing of data to the database.

While there are some additional optimizations in this release to further reduce
the amount of data that needs to be written, in this release, we focused on how
often data is read from the database and optimizing its scale for larger setups.

This release is for you if you have many sensors generating statistics, as
compiling statistics now takes 30-100x less time. 

Are you using the [History Stats] integration? The number of database queries
needed for most sensors with a fixed start time is 99% less.

Even if your instance is small and you don’t record many states, you’ll benefit
from the recorder optimizations to avoid waking up when there is no new
data to commit.

We have made additional improvements to the history APIs to speed up retrieving
from the database, reducing API response times by 15-35% on average.

Finally, we have reduced the memory used during database migrations to smooth
future migrations.

[History Stats]: /integrations/history_stats

## Update entity updates

{% details "TODO" %}

- Add screenshot
- Improve story
- Link some blueprints from the community?

{% enddetails %}

In the [previous release, we introduced update entities](/blog/2022/04/06/release-20224/#introducing-update-entities).
It was a well received concept and this release, we added a couple of
improvements to it, based on the feedback we've received from you all.

Almost all feedback involved "Skipping an update"-related functionality. How
to see which updates I have skipped? Can I unskip an update?

To help with these we added:

- The possibility to view all skipped update from the UI.
- Added an "unskip" button to the updates that have been skipped.
- Added a {% my developer_call_service service="update.clear_skipped" %}
  service that can be used in automation or scripts to unskip updates.

This will give you full insight, control and automation capabilities to "unskip"
any update you have previously skipped.

Additionally, this release two new integrations have implemented the update
entity: 

- [Sensibo], done by [@gjohansson-ST]
- [AVM FRITZ!Box Tools], done by [@Mask3007]

[@gjohansson-ST]: https://github.com/gjohansson-ST
[@Mask3007]: https://github.com/Mask3007
[AVM FRITZ!Box Tools]: /integrations/fritz
[Sensibo]: /integrations/sensibo

## Template selector

{% details "TODO" %}

- Revisit story
- Replace screenshot
- Make smaller item?

{% enddetails %}

A new [selector](/docs/blueprint/selectors/) has been added this release:
The [Template selector].

This new selector can be used in, for example, Blueprints to ask the user
for a template input; providing a nice code editor with Jinja syntax
highlighting and entity auto-completion.

This release adds the template editor to the automation and script editors,
in case of the template conditions and wait template action.

<img class="no-shadow" src='https://user-images.githubusercontent.com/195327/164308418-72ae7e08-1ebc-44c7-82ec-7d51a931e65b.png' alt='Screenshot showing the template selector'>

Selectors are not just available for Blueprints, but also for your script fields
and (custom) integration and dashboard card developers.

[Template selector]: /docs/blueprint/selectors/#template-selector

## Other noteworthy changes

{% details "TODO" %}

- Revisit / recheck for other, newer and/or better items
- Check contents/spelling/grammar/order

{% enddetails %}

There is much more juice in this release; here are some of the other
noteworthy changes this release:

- Every script now automatically gets an unique ID, which means you can edit
  their name, icon, and assign them to areas straight from the UI!
  Thanks, [@frenck]!
- If you run Z-Wave JS server manually in for example, a Docker container, it
  will now be automatically discovered on your network. Thanks [@raman325]!
- Template entities now have a `this` variable availble, which is reference
  to state of the template entity itself. Awesome work [@akloeckner] and 
  [@emontnemery]!
- Running Home Assistant Core or Container? [@frenck] added the
  {% my developer_call_service service="backup.create" %} service to the
  [backup] integration allowing you to create an automation to create backups
  on a schedule.
- [@sisimomo] added Markdown support to Blueprint input descriptions, allow
  you to add links to e.g., documentation in your Blueprints.
- [Sonos] now has a favorites sensor, so you can access and use your favorites
  in your automations, scripts and templates. Thanks [@jjlawren]!
- [@dmulcahey] added support for configuring the power on state, of devices
  that have this configuration option, to [ZHA]. Nice!
- Sensors now have a new device class available: "duration". Thanks, [@bdraco]!
- The output of [Media Selector] can now be directly used with play media
  service calls in your Blueprints. Awesome, [@emontnemery]!
- [@raman325] added frontend support for Sirens, so you can actually turn one
  on from the UI. 🚨 Alarming news [@raman325]!
- [@frenck] added an persons attribute to zones, which indicates who is
  currently in a zone.
- When customizing the device class / "Show as" of an entity in the UI, you can
  now set it to nothing/emtpy as well. Thanks, [@zsarnett]!
- [@rdfurman] Added support to the [Honeywell] Total Connect Comfort (US)
  integration for outdoor sensors. Awesome!
- [Philips TV] now provides a switch to turn on/off the "Ambilight+Hue" syncing
  if your TV model supports that. Thanks, [@bramstroker]!
  
[@akloeckner]: https://github.com/akloeckner
[@bdraco]: https://github.com/bdraco
[@bramstroker]: https://github.com/bramstroker
[@dmulcahey]: https://github.com/dmulcahey
[@emontnemery]: https://github.com/emontnemery
[@frenck]: https://github.com/frenck
[@jjlawren]: https://github.com/jjlawren
[@raman325]: https://github.com/raman325
[@rdfurman]: https://github.com/rdfurman
[@sisimomo]: https://github.com/sisimomo
[@zsarnett]: https://github.com/zsarnett
[backup]: /integrations/backup
[Honeywell]: /integrations/honeywell
[Media Selector]: /docs/blueprint/selectors/#media-selector
[Philips TV]: /integrations/philips_js
[Sonos]: /integrations/sonos
[ZHA]: /integrations/zha

## New Integrations

We welcome the following new integrations this release:

- [Meater], added by[@Sotolotl]
- [SENZ], added by [@milanmeu]

[@milanmeu]: https://github.com/milanmeu
[@Sotolotl]: https://github.com/Sotolotl
[Meater]: /integrations/meater
[SENZ]: /integrations/senz

## Integrations now available to set up from the UI

The following integrations are now available via the Home Assistant UI:

- [SQL], done by [@gjohansson-ST]

[@gjohansson-ST]: https://github.com/gjohansson-ST
[SQL]: /integrations/sql

## Need help? Join the community!

Home Assistant has a great community of users who are all more than willing
to help each other out. So, join us!

Our very active [Discord chat server](/join-chat) is an excellent place to be
at, and don't forget to join our amazing [forums](https://community.home-assistant.io/).

Found a bug or issue? Please report it in our [issue tracker](https://github.com/home-assistant/core/issues),
to get it fixed! Or, check [our help page](/help) for guidance for more
places you can go.

Are you more into email? [Sign-up for our Building the Open Home Newsletter](/newsletter)
to get the latest news about features, things happening in our community and
other news about building an Open Home; straight into your inbox.

## Breaking Changes

Below is a listing of the breaking change for this release, per subject or
integration. Click on one of those to read more about the breaking change
for that specific item.

{% details "AVM FRITZ!Box Call Monitor" %}

The previously deprecated YAML configuration of theAVM FRITZ!Box Call Monitor
integration has been removed.

AVM FRITZ!Box Call Monitor is now configured via the UI, any existing YAML
configuration has been imported in previous releases and can now be safely
removed from your YAML configuration files.

([@cdce8p] - [#70829]) ([documentation](/integrations/fritzbox_callmonitor))

[@cdce8p]: https://github.com/cdce8p
[#70829]: https://github.com/home-assistant/core/pull/70829

{% enddetails %}

{% details "AVM FRITZ!Box Tools" %}

The binary sensor entity showing that an update is available for the FRITZ!Box
firmware has been deprecated and will be removed in Home Assistant 2022.7.

The AVM FRITZ!Box Tools integration now provides an `update` entity as a
replacement.

([@Mask3007] - [#70096]) ([documentation](/integrations/fritz))

[@Mask3007]: https://github.com/Mask3007
[#70096]: https://github.com/home-assistant/core/pull/70096

{% enddetails %}

{% details "BMW Connected Drive" %}

All `bmw_connected_drive.*` services are removed (deprecated since 2022.2).
Please use the new button entities with the `button.press` service instead.

([@rikroe] - [#69808]) ([documentation](/integrations/bmw_connected_drive))

[@rikroe]: https://github.com/rikroe
[#69808]: https://github.com/home-assistant/core/pull/69808

---

The `button.<your_vehicle_refresh` entity is deprecated and will be removed in
a future version. Please use the `homeassistant.update_entity` service with
any BMW entity to force-refresh all platforms from the BMW API.

([@rikroe] - [#67003]) ([documentation](/integrations/bmw_connected_drive))

[@rikroe]: https://github.com/rikroe
[#67003]: https://github.com/home-assistant/core/pull/67003

{% enddetails %}

{% details "deCONZ" %}

Migrating deCONZ Siren entities from switch platform to siren platform has
been removed. This only affects users upgrading from before 2021.10 to 2022.5
or later. At most this causes lingering unavailable switch entities; which
can be manually removed.

([@Kane610] - [#70600]) ([documentation](/integrations/deconz))

[@Kane610]: https://github.com/Kane610
[#70600]: https://github.com/home-assistant/core/pull/70600

--- 

Migrated deCONZ light entities of type "On/Off Output" to switch
from light platform as they are binary devices (only on/off).

([@Kane610] - [#70598]) ([documentation](/integrations/deconz))

[@Kane610]: https://github.com/Kane610
[#70598]: https://github.com/home-assistant/core/pull/70598

{% enddetails %}

{% details "Fibaro" %}

Fibaro lights no longer supports deprecated `white_value`,
use `rgbw_color` instead.

([@rappenze] - [#69189]) ([documentation](/integrations/fibaro))

[@Kane610]: https://github.com/Kane610
[#69189]: https://github.com/home-assistant/core/pull/69189

{% enddetails %}

{% details "Flick Electric" %}

Units changed from `cents` to `¢/kWh`. This more accurately represent the type
of value, and makes the sensor work when used in the Energy dashboards.

If you relied on this unit of measurement format in your automations, scripts
or have been recording it in an external time metrics database, you may need
to adopt to this change.

([@ZephireNZ] - [#69396]) ([documentation](/integrations/flick_electric))

[@ZephireNZ]: https://github.com/ZephireNZ
[#69396]: https://github.com/home-assistant/core/pull/69396

{% enddetails %}

{% details "History Stats" %}

The pretty formatted value attribute has been removed in favor of using the
new duration state class which is formatted by the frontend.

This change significantly reduces the number of rows stored in the database.

([@bdraco] - [#70720]) ([documentation](/integrations/history_stats))

[@bdraco]: https://github.com/bdraco
[#70720]: https://github.com/home-assistant/core/pull/70720

{% enddetails %}

{% details "HomeKit" %}

The device class `carbon_dioxide` is no longer admitted as a `binary_sensor`
device class; as its not a valid device class for a binary sensor. If you have
overridden the device class with customize need to adjust your configuration.

([@epenet] - [#69239]) ([documentation](/integrations/homekit))

[@epenet]: https://github.com/epenet
[#69239]: https://github.com/home-assistant/core/pull/69239

{% enddetails %}

{% details "IKEA TRÅDFRI" %}

The native IKEA TRÅDFRI groups are now removed. We propose using
[light groups](/integrations/group/) instead. 

Additionally, the previously deprecated YAML configuration of the IKEA TRÅDFRI
integration has been removed.

IKEA TRÅDFRI is now configured via the UI, any existing YAML
configuration has been imported in previous releases and can now be safely
removed from your YAML configuration files.

([@ggravlingen] - [#68033]) ([documentation](/integrations/tradfri))

[@ggravlingen]: https://github.com/ggravlingen
[#68033]: https://github.com/home-assistant/core/pull/68033

{% enddetails %}

{% details "Integration - Riemann sum integral" %}

The Integration sensor `unit` configuration parameter was deprecated in
Home Assistant Core release 2021.10 and is now removed as it did not
take `unit_prefix` and `unit_time` into account.

Example:

```yaml
sensor:
  - platform: integration
    source: sensor.current_power
    name: energy_spent
    unit_prefix: k
    unit_time: h
    unit: MWs
    round: 2
```

The configuration in the example would cause the source sensor's unit
(e.g. `W`) tobe over ruled and the integration sensor's `unit_of_measurement`
would be set to `MWs` (MegaWatt-Second) even though the integral calculation
was performed with `k` (kilo) and `h` (hour), i.e. the value of the integration
sensor is in `kWh` not `MWs`.

([@dgomes] - [#69157]) ([documentation](/integrations/integration))

[@dgomes]: https://github.com/dgomes
[#69157]: https://github.com/home-assistant/core/pull/69157

{% enddetails %}

{% details "LIFX" %}

The LIFX integration changed the network adapters used to discover LIFX devices.
Instead of enabling all adapters on which LIFX devices appear, it now only
uses the adapter(s) enabled in Home Assistant.

This makes discovery of LIFX faster and more reliable.

([@Djelibeybi] - [#70458]) ([documentation](/integrations/lifx))

[@Djelibeybi]: https://github.com/Djelibeybi
[#70458]: https://github.com/home-assistant/core/pull/70458

{% enddetails %}

{% details "Media Source" %}

Filenames and directories starting with a `.`, will no longer appear in the
Media Browser.

If the file or directory name starts with a `.`, it means they are marked
hidden; thus the media browser will now repect that.

([@DDanii] - [#69820]) ([documentation](/integrations/media_source))

[@DDanii]: https://github.com/DDanii
[#69820]: https://github.com/home-assistant/core/pull/69820

{% enddetails %}

{% details "Min/Max" %}

`min_max` sensors generated a significant amount of database rows because they
included all attributes regardless of the configured type. For active sensors
these attributes added up to multiple megabytes per day for each sensor.
[Reference issue report](https://github.com/home-assistant/core/issues/56987#issuecomment-1100575672).

`min_max` sensors now only set attributes based on the configured type of sensor
as below:

- `min`: `min_entity_id`
- `max`: `max_entity_id`
- `last`: `last_entity_id`

The following attributes are no longer present: `min`, `max`, `mean`, `median`,
`last`, `count_sensors`

If access to the data previously provided by the attributes is needed,
create a separate `min_max` sensor for that required type instead.

([@bdraco] - [#70142]) ([documentation](/integrations/min_max))

[@bdraco]: https://github.com/bdraco
[#70142]: https://github.com/home-assistant/core/pull/70142

{% enddetails %}

{% details "MJPEG IP Camera" %}

The previously deprecated YAML configuration of the MJPEG IP Camera
integration has been removed.

MJPEG IP Camera is now configured via the UI, any existing YAML
configuration has been imported in previous releases and can now be safely
removed from your YAML configuration files.

([@frenck] - [#68033]) ([documentation](/integrations/mjpeg))

[@frenck]: https://github.com/frenck
[#68980]: https://github.com/home-assistant/core/pull/68980

{% enddetails %}

{% details "ONVIF" %}

Additionally, the previously deprecated YAML configuration of the ONVIF
integration has been removed.

ONVIF is now configured via the UI, any existing YAML
configuration has been imported in previous releases and can now be safely
removed from your YAML configuration files.

([@hunterjm] - [#70395]) ([documentation](/integrations/onvif))

[@hunterjm]: https://github.com/hunterjm
[#70395]: https://github.com/home-assistant/core/pull/70395

{% enddetails %}

{% details "Pentair ScreenLogic" %}

The original `orp_supply_level` and `ph_supply_level` sensors will become
unavailable. Two new sensors will be automatically created, but the originals
will have to be removed and the new ones manually renamed to match the originals.

This should only affect those with IntelliChem.

([@dieselrabbit] - [#69937]) ([documentation](/integrations/screenlogic))

[@dieselrabbit]: https://github.com/dieselrabbit
[#69937]: https://github.com/home-assistant/core/pull/69937

{% enddetails %}

{% details "Phone Modem" %}

The previously deprecated `modem_callerid.reject_call` service, has now been
removed. A button entity has previously been made available as a replacement.

([@frenck] - [#69019]) ([documentation](/integrations/modem_callerid))

[@frenck]: https://github.com/frenck
[#69019]: https://github.com/home-assistant/core/pull/69019

{% enddetails %}

{% details "Radarr" %}

The previously deprecated Wanted sensor in the Radarr integration has been
removed. If you have this sensor still configured it your YAML configuration,
you should remove it before updating.

([@tkdrob] - [#69500]) ([documentation](/integrations/radarr))

[@tkdrob]: https://github.com/tkdrob
[#69500]: https://github.com/home-assistant/core/pull/69500

{% enddetails %}

{% details "RainMachine" %}

RainMachine zone switches no longer have the `time_remaining` attribute;
instead, each zone now has a separate sensor entity (device class of `timestamp`,
entity category of `diagnostic`) that shows the datetime at which the zone will
finish (or last finished if the zone isn't running).

([@bachya] - [#69206]) ([documentation](/integrations/rainmachine))

[@bachya]: https://github.com/bachya
[#69206]: https://github.com/home-assistant/core/pull/69206

---

RainMachine switch attributes that are `floats` are now rounded to two decimals
of precision.

([@bachya] - [#70006]) ([documentation](/integrations/rainmachine))

[@bachya]: https://github.com/bachya
[#70006]: https://github.com/home-assistant/core/pull/70006

{% enddetails %}

{% details "Recorder" %}

Home Assistant will now automatically repack your database once a month, on 
the second sunday of the month.

Repacking allows to shrink the database in file size, resulting in smaller
backups. It also frees up the space that has been freed up by the database
optimizations made in 2022.4.

Some notes:

- It is only done once a month to minimize I/O.
- The second Sunday was chosen as it would be out of sync with Home Assistant
  releases.
- This automatic repacking can be disabled by setting `auto_repack` to `false`
  in the recorder configuration

([@bdraco] - [#69314]) ([documentation](/integrations/recorder))

[@bdraco]: https://github.com/bdraco
[#69314]: https://github.com/home-assistant/core/pull/69314

---

It's no longer possible to configure the recorder to use an in-memory database.

([@emontnemery] - [#69616]) ([documentation](/integrations/recorder))

[@emontnemery]: https://github.com/emontnemery
[#69616]: https://github.com/home-assistant/core/pull/69616

---

Integrations and platforms can provide hints to the recorder to exclude specific
entity state attributes from being recorded.

This excludes attributes that hold little to no historical value or are a
static value. This significantly reduces the amount of data stored.

The following attributes are no longer recorded:

- Automation: `current`, `id`, `last_action`, `last_triggered`, `max` and  `mode`.
- Input Boolean: `editable`.
- Input Button: `editable`.
- Input Datetime: `editable`, `has_date`, and `has_datetime`.
- Input Number: `editable`, `max`, `min`, `mode`, and `step`.
- Input Text: `editable`, `max`, `min`, `mode`, and `pattern`.
- Input Select: `editable`.

([@bdraco] - [#70168] [#70223])

([@frenck] - [#70154] [#70224] [#70225] [#70226])

[@bdraco]: https://github.com/bdraco
[@frenck]: https://github.com/frenck
[#70154]: https://github.com/home-assistant/core/pull/70154
[#70168]: https://github.com/home-assistant/core/pull/70168
[#70223]: https://github.com/home-assistant/core/pull/70223
[#70224]: https://github.com/home-assistant/core/pull/70224
[#70225]: https://github.com/home-assistant/core/pull/70225
[#70226]: https://github.com/home-assistant/core/pull/70226
[#70227]: https://github.com/home-assistant/core/pull/70227

{% enddetails %}

{% details "Sensibo" %}

Binary sensor for update available has been removed. Use the new update entities
to monitor available updates instead.

([@gjohansson-ST] - [#70180]) ([documentation](/integrations/sensibo))

[@gjohansson-ST]: https://github.com/gjohansson-ST
[#70180]: https://github.com/home-assistant/core/pull/70180

{% enddetails %}

{% details "SQL" %}

The SQL integration migrated to configuration
via the UI. Configuring SQL via YAML configuration
has been deprecated and will be removed in a future Home Assistant release.

Your existing YAML configuration is automatically imported on upgrade to this
release; and thus can be safely removed from your YAML configuration
after upgrading.

([@gjohansson-ST] - [#68700]) ([documentation](/integrations/sql))

[@gjohansson-ST]: https://github.com/gjohansson-ST
[#68700]: https://github.com/home-assistant/core/pull/68700

{% enddetails %}

{% details "Synology DSM" %}

The naming of entities and devices has been aligned, so that the device name
is now part of the entity name.

([@mib1185] - [#69754]) ([documentation](/integrations/synology_dsm))

[@mib1185]: https://github.com/mib1185
[#69754]: https://github.com/home-assistant/core/pull/69754

{% enddetails %}

{% details "Templates" %}

Trigger based template sensors are now initialized to the last known state at
Home Assistant startup, instead of to "unknown".

([@emontnemery] - [#69344]) ([documentation](/integrations/template))

[@emontnemery]: https://github.com/emontnemery
[#69344]: https://github.com/home-assistant/core/pull/69344

{% enddetails %}

{% details "Text-to-Speech (TTS)" %}

The TTS `base_url` option is deprecated. Please, configure internal/external
URL instead.

([@balloob] - [#70382]) ([documentation](/integrations/tts))

[@balloob]: https://github.com/balloob
[#70382]: https://github.com/home-assistant/core/pull/70382

{% enddetails %}

{% details "UPnP/IGD" %}

The UPnP/IGD integration options have been removed. This includes the
ability to configure a custom update/scan interval.

As an alternative, the more generic and more flexible
`homeassistant.update_entity` service can be used to create an automation that
updates the entities on your desired intervals or schedule.

([@StevenLooman] - [#69134]) ([documentation](/integrations/upnp))

[@StevenLooman]: https://github.com/StevenLooman
[#69134]: https://github.com/home-assistant/core/pull/69134

{% enddetails %}

{% details "Vera" %}

Vera power meter sensor is now using the (correct) symbol `W` for watt instead
of `watts`.

If you relied on this unit of measurement format in your automations, scripts
or have been recording it in an external time metrics database, you may need
to adopt to this change.

([@emontnemery] - [#69285]) ([documentation](/integrations/vera))

[@emontnemery]: https://github.com/emontnemery
[#69285]: https://github.com/home-assistant/core/pull/69285

{% enddetails %}

{% details "Zengge" %}

Zengge lights no longer support `white_value`, please use `white` instead.

([@emontnemery] - [#55260]) ([documentation](/integrations/zengge))

[@emontnemery]: https://github.com/emontnemery
[#55260]: https://github.com/home-assistant/core/pull/55260

{% enddetails %}


If you are a custom integration developer and want to learn about breaking
changes and new features available for your integration: Be sure to read our
[developer blog][devblog] summarizing all the changes in this release.

- [Calendar Data Model improvements and deprecations](https://developers.home-assistant.io/blog/2022/04/18/calendar-data-model)
- [Deprecating all SUPPORT_* constants](https://developers.home-assistant.io/blog/2022/04/02/support-constants-deprecation)
- [Local OAuth2 Updates](https://developers.home-assistant.io/blog/2022/04/16/local-oauth2)
- [Saying goodbye to the time_changed event](https://developers.home-assistant.io/blog/2022/04/20/saying-goodbye-to-event_time_changed)

TODO: Make list of items from devblog
  - Drop deprecated support for unit_of_measurement from sensor ([@emontnemery] - [#69061]) ([sensor docs]) (breaking-change)
  - Remove deprecated temperature conversion of non temperature sensors ([@emontnemery] - [#69069]) ([sensor docs]) (breaking-change)
  - Add ColorMode enum to light platform ([@frenck] - [#69223]) ([light docs]) ([demo docs]) (breaking-change)
  - Replace Camera STREAM_ constants with StreamType enum ([@frenck] - [#69871]) ([camera docs]) ([nest docs]) (breaking-change)
  - Replace Alarm Control Panel FORMAT_ constants with CodeFormat enum ([@frenck] - [#69861]) (breaking-change)
  - Replace Climate HVAC_MODE_* constants with HVACMode enum ([@frenck] - [#70286]) ([climate docs]) ([demo docs]) (breaking-change)
  - Replace Climate CURRENT_HVAC_* constants with HVACAction enum ([@frenck] - [#70319]) ([climate docs]) ([mqtt docs]) ([demo docs]) (breaking-change)

[devblog]: https://developers.home-assistant.io/blog/

TODO: Remove this line; Last processed breaking change: 70829

## Farewell to the following

The following integrations are also no longer available as of this release:

- **Arlo** has been removed. It was in a broken state for a long time caused
  by authentication changes upstream. ([@anaisbetts] - [#70330])
- **Digital Loggers** has been removed. It relied on web scraping, which is
  [not allowed][ADR-0004] for a Home Assistant Core integration.
  ([@tkdrob] - [#69939])
- **Updater** was previously deprecated has been removed. Use the [Version]
  and [Analytics] integrations as a replacement.
  ([@frenck] - [#68981])

[@anaisbetts]: https://github.com/anaisbetts
[@frenck]: https://github.com/frenck
[@tkdrob]: https://github.com/tkdrob
[#68981]: https://github.com/home-assistant/core/pull/68981
[#69939]: https://github.com/home-assistant/core/pull/69939
[#70330]: https://github.com/home-assistant/core/pull/70330
[ADR-0004]: https://github.com/home-assistant/architecture/blob/master/adr/0004-webscraping.md?rgh-link-date=2022-04-12T21%3A46%3A17Z
[Analytics]: /integrations/analytics
[Version]: /integrations/version

## All changes

Of course, there is a lot more in this release. You can find a list of
all changes made here: [Full changelog for Home Assistant Core 2022.5](/changelogs/core-2022.5)
